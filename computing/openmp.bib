
@article{1998-Dagum-IEEECSE-5-46,
   author = {L. Dagum and R. Menon},
   journal = {IEEE Comput. Sci. Eng.},
   title = {{OpenMP}: an industry standard {API} for shared-memory programming},
   year = {1998},
   volume = {5},
   number = {1},
   pages = {46--55},
   abstract = {At its most elemental level, OpenMP is a set of compiler directives and callable runtime library routines that extend Fortran (and separately, C and C++ to express shared memory parallelism. It leaves the base language unspecified, and vendors can implement OpenMP in any Fortran compiler. Naturally, to support pointers and allocatables, Fortran 90 and Fortran 95 require the OpenMP implementation to include additional semantics over Fortran 77. OpenMP leverages many of the X3H5 concepts while extending them to support coarse grain parallelism. The standard also includes a callable runtime library with accompanying environment variables.},
   keywords = {application program interfaces;shared memory systems;parallel programming;software standards;software portability;software reviews;OpenMP;industry standard API;shared memory programming;compiler directives;callable runtime library routines;Fortran;shared memory parallelism;Fortran compiler;pointers;allocatables;Fortran 90;Fortran 95;X3H5 concepts;coarse grain parallelism;callable runtime library;environment variables;Message passing;Scalability;Hardware;Computer architecture;Power system modeling;ANSI standards;Parallel processing;Coherence;Software systems;Parallel programming},
   doi = {10.1109/99.660313},
   ISSN = {1070-9924},
   month = {Jan}
}

