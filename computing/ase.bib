
@article{2002-Bahn-CSE-4-56,
   Author = {S. R. Bahn and K. W. Jacobsen},
   Title = {An object-oriented scripting interface to a legacy electronic structure code},
   Year = {2002},
   Volume = {4},
   Number = {3},
   Pages = {56--66},
   Month = {MAY-JUN},
   Abstract = {The authors have created an object-oriented scripting interface to a mature density functional theory code. The interface gives users a high-level, flexible handle on the code without rewriting the underlying number-crunching code. The authors also discuss the design issues and advantages of homogeneous interfaces},
   Publisher = {IEEE COMPUTER SOC},
   Address = {10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA},
   ISSN = {1521-9615},
   Journal = {Comput. Sci. Eng.},
   DOI = {10.1109/5992.998641}
}

@article{2017-Larsen-JPCM-29-273002,
   author = {Ask Hjorth Larsen and Jens Jørgen Mortensen and Jakob Blomqvist and Ivano E. Castelli and Rune Christensen and Marcin Dułak and Jesper Friis and Michael N. Groves and Bjørk Hammer and Cory Hargus and Eric D. Hermes and Paul C. Jennings and Peter Bjerre Jensen and James Kermode and John R. Kitchin and Esben Leonhard Kolsbjerg and Joseph Kubal and Kristen Kaasbjerg and Steen Lysgaard and Jón Bergmann Maronsson and Tristan Maxson and Thomas Olsen and Lars Pastewka and Andrew Peterson and Carsten Rostgaard and Jakob Schiøtz and Ole Schütt and Mikkel Strange and Kristian S. Thygesen and Tejs Vegge and Lasse Vilhelmsen and Michael Walter and Zhenhua Zeng and Karsten W. Jacobsen},
   title = {The atomic simulation environment --- a {Python} library for working with atoms},
   journal = {J. Phys.: Condens. Matter},
   volume = {29},
   number = {27},
   pages = {273002},
   doi = {10.1088/1361-648X/aa680e},
   url = {http://stacks.iop.org/0953-8984/29/i=27/a=273002},
   year = {2017},
   abstract = {The atomic simulation environment (ASE) is a software package written in the Python programming language with the aim of setting up, steering, and analyzing atomistic simulations. In ASE, tasks are fully scripted in Python. The powerful syntax of Python combined with the NumPy array library make it possible to perform very complex simulation tasks. For example, a sequence of calculations may be performed with the use of a simple ‘for-loop’ construction. Calculations of energy, forces, stresses and other quantities are performed through interfaces to many external electronic structure codes or force fields using a uniform interface. On top of this calculator interface, ASE provides modules for performing many standard simulation tasks such as structure optimization, molecular dynamics, handling of constraints and performing nudged elastic band calculations.}
}

